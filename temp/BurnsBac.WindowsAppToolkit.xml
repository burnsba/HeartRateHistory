<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BurnsBac.WindowsAppToolkit</name>
    </assembly>
    <members>
        <member name="T:BurnsBac.WindowsAppToolkit.Converters.BoolToVisbilityConverter">
            <summary>
            Converts bool to visibility status.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Converters.BoolToVisbilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts bool to visibility status.
            </summary>
            <param name="value">Value to convert (bool).</param>
            <param name="targetType">Type to convert to (Visibility).</param>
            <param name="parameter">Convert parameter.</param>
            <param name="culture">Convert culture.</param>
            <returns>
            Visibility status.
            </returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Converters.BoolToVisbilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            NotSupported.
            </summary>
            <param name="value">Value to convert (Visibility).</param>
            <param name="targetType">Type to convert to (bool).</param>
            <param name="parameter">Convert parameter.</param>
            <param name="culture">Convert culture.</param>
            <returns>
            bool.
            </returns>
            <remarks>
            Converts visibility to bool status.
            </remarks>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Converters.ExceptionConverter">
            <summary>
            Converts exception.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Converters.ExceptionConverter.DefaultToString(System.Exception)">
            <summary>
            Converts exception to string in the usual format.
            </summary>
            <param name="ex">Exception to convert.</param>
            <returns>Contents of exception and all inner exceptions.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Converters.InverseBooleanConverter">
            <summary>
            Inverts a bool.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Converters.InverseBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts bool to inverted value.
            </summary>
            <param name="value">Value to convert (bool).</param>
            <param name="targetType">Type to convert to (bool).</param>
            <param name="parameter">Convert parameter.</param>
            <param name="culture">Convert culture.</param>
            <returns>
            Inverted value.
            </returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Converters.InverseBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            NotSupported. Same as Convert.
            </summary>
            <param name="value">Value to convert (bool).</param>
            <param name="targetType">Type to convert to (bool).</param>
            <param name="parameter">Convert parameter.</param>
            <param name="culture">Convert culture.</param>
            <returns>
            Inverted value.
            </returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.DataTemplateSelectors.ConfigSettingTemplateSelector">
            <summary>
            Xaml data template selector for skin config items.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.DataTemplateSelectors.ConfigSettingTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            Resolves object based on InputType property.
            </summary>
            <param name="obj">Object to resolve.</param>
            <param name="container">Container.</param>
            <returns>Data template from xaml.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Dto.DropdownItem">
            <summary>
            Basic drop down list item.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Dto.DropdownItem.Text">
            <summary>
            Gets or sets text to display.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Dto.DropdownItem.Id">
            <summary>
            Gets or sets id to use.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration">
            <summary>
            Exception when reading settings/configuration file.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration"/> class.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration"/> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration"/> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Error.InvalidConfiguration"/> class.
            </summary>
            <param name="info">SerializationInfo.</param>
            <param name="context">StreamingContext.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase">
            <summary>
            Single setting from the settings.json file. This is the UI item base class.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase._settingsItem">
            <summary>
            Underlying setting.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.#ctor(BurnsBac.WindowsAppToolkit.HotConfig.Setting)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase"/> class.
            </summary>
            <param name="item">Item source.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.CurrentValue">
            <inheritdoc />
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.Display">
            <inheritdoc />
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.InputType">
            <inheritdoc />
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.IsModified">
            <summary>
            Gets or sets a value indicating whether this setting has been changed.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.Key">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.Dispose">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingBase.ToSettingsItem">
            <summary>
            Converts back to a json setttings item.
            </summary>
            <returns>Underlying setting object.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingItem">
            <summary>
            For a single setting from the settings.json file that can have multiple values, this
            is a container for one of those multiple values.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingItem.KeyInt">
            <summary>
            Gets or sets the primary key, as an int. Optional.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingItem.Key">
            <summary>
            Gets or sets the data source key. This (selected value) should end up getting saved as <see cref="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.CurrentValue"/>.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingItem.Display">
            <summary>
            Gets or sets the display text, e.g., in a combo box.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.ConfigSettingItem.Data">
            <summary>
            Gets or sets optional data object associated with this value.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProvider">
            <summary>
            Interface for skin json settings dropdown source.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderOnce">
            <summary>
            Interface for skin json settings dropdown source. Data is only queried and supplied once.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderOnce.FetchData">
            <summary>
            Retrieves data to show end user.
            </summary>
            <returns>Key value pairs to be passed to dropdown.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderPoll">
            <summary>
            Interface for skin json settings dropdown source. Data is acquired through some kind of ongoing process. New items
            are added to the collection as discovered.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderPoll.DataItems">
            <summary>
            Gets or sets the observable collection of data items.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderPoll.Start">
            <summary>
            Begins acquiring data to populate items collection.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProviderPoll.Stop">
            <summary>
            Stops acquiring items to populate collection.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting">
            <summary>
            Single setting from the settings.json file. This is the UI item interface.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.Key">
            <summary>
            Gets settings key name.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.Display">
            <summary>
            Gets text to show to user.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.InputType">
            <summary>
            Gets the type of input.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.IConfigSetting.IsModified">
            <summary>
            Gets or sets a value indicating whether the value has changed.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes">
            <summary>
            Skin config supported input types.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes.Unknown">
            <summary>
            Default/unknown.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes.Textbox">
            <summary>
            Textbox.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes.Dropdown">
            <summary>
            Dropdown list.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.InputTypesConverter">
            <summary>
            Converts <see cref="T:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes"/>.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.InputTypesConverter.InputTypeToString(BurnsBac.WindowsAppToolkit.HotConfig.InputTypes)">
            <summary>
            Converts from <see cref="T:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="t">Enum to convert.</param>
            <returns>String.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.InputTypesConverter.StringToInputTypes(System.String)">
            <summary>
            Converts from <see cref="T:System.String"/> to <see cref="T:BurnsBac.WindowsAppToolkit.HotConfig.InputTypes"/>.
            </summary>
            <param name="s">String to convert.</param>
            <returns>Enum.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.Setting">
            <summary>
            Single setting from the settings.json file. This is the serializable implementation.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.Key">
            <summary>
            Gets or sets settings key name.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.Display">
            <summary>
            Gets or sets text to show to user.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.Input">
            <summary>
            Gets or sets the type of input.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.Datasource">
            <summary>
            Gets or sets the datasource type name.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.DatasourceAssembly">
            <summary>
            Gets or sets the datasource assembly name.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.Setting.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.Setting.ToString">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.Setting.Clone">
            <summary>
            Creates a copy of the current item.
            </summary>
            <returns>Copy.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.SettingsCollection">
            <summary>
            Parent collection from the settings.json file. This is the serializable implementation.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.SettingsCollection.Items">
            <summary>
            Gets or sets list of settings.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.SettingsCollection.FromFile(System.String)">
            <summary>
            Loads settings from file.
            </summary>
            <param name="path">Path of file to load.</param>
            <returns>Parsed settings.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.SettingsCollection.SaveChanges">
            <summary>
            Writes current object back to the settings file.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.SettingsCollection.ToSettingsDictionary">
            <summary>
            Converts settings to dictionary.
            </summary>
            <returns>Dictionary of Key,CurrentValue pairs.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver">
            <summary>
            Core of this library. Instantiates correct hw/ui types from skin xml. Resolves
            data sources from skin config json.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver._configDataProviderTypes">
            <summary>
            List of types of known config data providers.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver._configDataProvidersLoaded">
            <summary>
            Whether or not data providers have already been loaded.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver.ConfigDataProvidersDirectory">
            <summary>
            Gets or sets directory to load assemblies containg data providers from.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver.GetConfigDataProviderType(System.String,System.String)">
            <summary>
            Resolves type name and assembly name to a type from the list
            of known data provider types.
            </summary>
            <param name="shortTypeName">Type name without assembly or version.</param>
            <param name="assemblyName">Name of hosting assembly.</param>
            <returns>Type. First() is called, so this will throw an exception if not found.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver.CreateConfigDataProviderInstance(System.String,System.String)">
            <summary>
            Creates instance of skin data providor source.
            </summary>
            <param name="shortTypeName">Type name without assembly or version.</param>
            <param name="assemblyName">Name of hosting assembly.</param>
            <returns>New instance of data providor.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.HotConfig.TypeResolver.LoadConfigDataProviders">
            <summary>
            Loads assemblies from specified directory. Looks for items of type <see cref="T:BurnsBac.WindowsAppToolkit.HotConfig.DataSource.IConfigDataProvider"/>.
            This can only be performed once.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler">
            <summary>
            Command helper.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action,System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action{System.Object},System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.CanExecuteChanged">
            <summary>
            Event handler.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.CanExecute(System.Object)">
            <summary>
            Gets a value indicating whether the command can be performed.
            </summary>
            <param name="parameter">Optional CanExecute function parameter.</param>
            <returns>Whether command can be performed.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.CommandHandler.Execute(System.Object)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter">Optional action parameter.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.ICloseable">
            <summary>
            Specifies object (window) has close method.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.ICloseable.Close">
            <summary>
            Closes object (window).
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1">
            <summary>
            Command that accepts parameter.
            </summary>
            <typeparam name="T">Type of parameter.</typeparam>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1"/> class.
            </summary>
            <param name="action">Action to perform when the command is executed.</param>
            <param name="canExecute">Function to determine if command can be executed.</param>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.CanExecuteChanged">
            <summary>
            Event handler.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.CanExecute(`0)">
            <summary>
            Gets a value indicating whether the command can be performed.
            </summary>
            <param name="parameter">Optional CanExecute function parameter.</param>
            <returns>Whether command can be performed.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Gets a value indicating whether the command can be performed.
            </summary>
            <param name="parameter">Optional CanExecute function parameter.</param>
            <returns>Whether command can be performed.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.Execute(`0)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter">Optional action parameter.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.RelayCommand`1.Execute(System.Object)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter">Optional action parameter.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1">
            <summary>
            Maintains sort order on a list, which is also an observable collection.
            </summary>
            <typeparam name="T">Underlying list type.</typeparam>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/> class.
            </summary>
            <param name="itemCompareFunction">
            Function which compares two elements in the collection
            and returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/> class.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/> class.
            </summary>
            <param name="comparer">
            Comparer, returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/>
            class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
            <param name="itemCompareFunction">
            Function which compares two elements in the collection
            and returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/>
            class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
            <param name="comparer">
            Comparer, returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Collections.Generic.List{`0},System.Func{`0,`0,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/>
            class that contains elements copied from the specified list.
            </summary>
            <param name="list">The list from which the elements are copied.</param>
            <param name="itemCompareFunction">
            Function which compares two elements in the collection
            and returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.#ctor(System.Collections.Generic.List{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1"/>
            class that contains elements copied from the specified list.
            </summary>
            <param name="list">The list from which the elements are copied.</param>
            <param name="comparer">
            Comparer, returns -1 if the first comes before the second,
            0 if they are equivalent,
            and 1 if the first comes after the seccond.
            </param>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.CollectionChanged">
            <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is
            refreshed.
            </summary>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.PropertyChanged">
            <summary>
            Property changed event.
            </summary>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged" />).
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is readonly (always false).
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">Index to get item from.</param>
            <returns>The item.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Add(`0)">
            <summary>
            Adds an item at the correct index based on the sort method.
            </summary>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of items at the correct index based on the sort method.
            </summary>
            <param name="collection">Items to add.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can
            be null for reference types.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the
            destination of the elements copied from. The System.Array must
            have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first
            occurrence within the entire collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can
            be null for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection,
            if found; otherwise, -1.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Insert(System.Int32,`0)">
            <summary>
            NotSupported.
            </summary>
            <param name="index">NotSupported1.</param>
            <param name="item">NotSupported2.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object.
            </summary>
            <param name="item">The object to remove from the collection. The value can
            be null for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns
            false if item was not found in the collection.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.ToNewList">
            <summary>
            Converts the current collection to a list.
            </summary>
            <returns>List of items.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.BlockReentrancy">
            <summary>
            Disallow reentrant attempts to change this collection. E.g. a event handler
            of the CollectionChanged event is not allowed to make changes to this collection.
            </summary>
            <remarks>
            typical usage is to wrap e.g. a OnCollectionChanged call with a using() scope:
            <code>
                    using (BlockReentrancy())
                    {
                        CollectionChanged(this, new NotifyCollectionChangedEventArgs(action, item, index));
                    }
            </code>
            </remarks>
            <returns>Object.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.CheckReentrancy">
            <summary> Check and assert for reentrant attempts to change this collection. </summary>
            <exception cref="T:System.InvalidOperationException"> raised when changing the collection
            while another collection change is still being notified to other listeners.</exception>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise CollectionChanged event to any listeners.
            Properties/methods modifying this ObservableCollection will raise
            a collection changed event through this virtual method.
            </summary>
            <remarks>
            When overriding this method, either call its base implementation
            or call <see cref="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.BlockReentrancy"/> to guard against reentrant collection changes.
            </remarks>
            <param name="e">Notify args.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a PropertyChanged event (per <see cref="T:System.ComponentModel.INotifyPropertyChanged" />).
            </summary>
            <param name="e">Notify args.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnPropertyChanged(System.String)">
            <summary>
            Helper to raise a PropertyChanged event  />).
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Helper to raise CollectionChanged event to any listeners.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
            <summary>
            Helper to raise CollectionChanged event to any listeners.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.OnCollectionReset">
            <summary>
            Helper to raise CollectionChanged event with action == Reset to any listeners.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.SortedObservableList`1.SimpleMonitor">
            <summary>
            This class helps prevent reentrant calls.
            </summary>
            <remarks>
            https://referencesource.microsoft.com/#system/compmod/system/collections/objectmodel/observablecollection.cs,b11e7ea64c231ef2 .
            </remarks>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.ViewModelBase">
            <summary>
            ViewModel base class.
            </summary>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.Mvvm.ViewModelBase.PropertyChanged">
            <summary>
            Property changed event.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
            Property changed notifier.
            </summary>
            <param name="property">Name of property that changed.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.ViewModelBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Property changed notifier.
            </summary>
            <typeparam name="T">Type of object containing property.</typeparam>
            <param name="prop">Property that changed.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Mvvm.WindowViewModelBase">
            <summary>
            Base class for window ViewModel.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Mvvm.WindowViewModelBase.CloseWindow(BurnsBac.WindowsAppToolkit.Mvvm.ICloseable)">
            <summary>
            Closes the window.
            </summary>
            <param name="window">Window to close.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogResult">
            <summary>
            Used to return information from a dialog window.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogResult.ResultOption">
            <summary>
            Gets or sets which button was chosen, if any, to close the window.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogResult.ResultValue">
            <summary>
            Gets or sets additional data to return.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogResult.ResultType">
            <summary>
            Gets or sets the type of additional data being returned.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogService">
            <summary>
            Used to manage creating dialog windows.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogService.OpenYesNoDialog(System.String,System.String)">
            <summary>
            Creates a new dialog with "yes" and "no" buttons.
            </summary>
            <param name="windowTitle">Title of window.</param>
            <param name="message">Message to show in window.</param>
            <returns>Result.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogService.OpenOkCancelDialog(System.String,System.String)">
            <summary>
            Creates a new dialog with "ok" and "cancel" buttons.
            </summary>
            <param name="windowTitle">Title of window.</param>
            <param name="message">Message to show in window.</param>
            <returns>Result.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogService.OpenOkCancelStringDialog(System.String,System.String)">
            <summary>
            Creates a new dialog with "ok" and "cancel" buttons. The user can also
            enter text in a textbox.
            </summary>
            <param name="windowTitle">Title of window.</param>
            <param name="message">Message to show in window.</param>
            <returns>Result.</returns>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.DialogService.DialogService.DialogCommon(BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase,System.String,System.String)">
            <summary>
            Helper function for common code. Creates the window and returns result.
            </summary>
            <param name="vm">View model.</param>
            <param name="windowTitle">Title of window.</param>
            <param name="message">Message to show in window.</param>
            <returns>Result.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult">
            <summary>
            Winforms dialog result.
            </summary>
            <remarks>
            https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.dialogresult?view=netframework-4.8 .
            </remarks>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.Abort">
            <summary>
            The dialog box return value is Abort (usually sent from a button labeled Abort).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.Cancel">
            <summary>
            The dialog box return value is Cancel (usually sent from a button labeled Cancel).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.Ignore">
            <summary>
            The dialog box return value is Ignore (usually sent from a button labeled Ignore).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.No">
            <summary>
            The dialog box return value is No (usually sent from a button labeled No).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.None">
            <summary>
            Nothing is returned from the dialog box. This means that the modal dialog continues running.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.OK">
            <summary>
            The dialog box return value is OK (usually sent from a button labeled OK).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.Retry">
            <summary>
            The dialog box return value is Retry (usually sent from a button labeled Retry).
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.DialogService.WinformsDialogResult.Yes">
            <summary>
            The dialog box return value is Yes (usually sent from a button labeled Yes).
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.IMessageBusNotification">
            <summary>
            Empty interface to specify message bus notification events.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus">
            <summary>
            Publish/subscribe message bus. Allows event notification across view models without attaching event handlers.
            This should only save weak references to objects.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus._subscriptions">
            <summary>
            Collection of known subscriptions.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.Subscribe``2(System.String,``1,System.String)">
            <summary>
            Creates a new subscription. If a subscription with the same parameters already exists, nothing happens.
            </summary>
            <typeparam name="TSubscribeTo">Type of object being subscribed to, that will transmit event.</typeparam>
            <typeparam name="TSubscriber">Type of object receiving notifications.</typeparam>
            <param name="subscribeToEvent">Name of the event to subscribe to.</param>
            <param name="subscriber">Object receiving notifications.</param>
            <param name="eventHandlerMethodName">Name of method that will be invoked via reflection to handle notification.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.Subscribe``2(System.String,``1,System.EventHandler)">
            <summary>
            Creates a new subscription. If a subscription with the same parameters already exists, nothing happens.
            </summary>
            <typeparam name="TSubscribeTo">Type of object being subscribed to, that will transmit event.</typeparam>
            <typeparam name="TSubscriber">Type of object receiving notifications.</typeparam>
            <param name="subscribeToEvent">Name of the event to subscribe to.</param>
            <param name="subscriber">Object receiving notifications.</param>
            <param name="eventHandler">Method that will be invoked to handle notification.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.Notify(System.Object,System.String,System.EventArgs)">
            <summary>
            Notify listeners of event.
            </summary>
            <param name="eventSource">Object sending notification.</param>
            <param name="notificationEvent">Name of the event sending notification.</param>
            <param name="args">Notification arguments.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.CastIsValid(System.Object,System.Type)">
            <summary>
            Used to determine if a weak reference is still valid by casting to type.
            </summary>
            <param name="obj">Reference to attempt cast.</param>
            <param name="t">Type to cast to.</param>
            <returns>True if cast is non-null, false otherwise.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo">
            <summary>
            Top level subscription information.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo"/> class.
            </summary>
            <param name="subscribeToContainerType">Type of object being subscribed to, that will transmit event.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.SubscribeToContainerType">
            <summary>
            Gets the type that will send notification events.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.Events">
            <summary>
            Gets the list of events that might send notifications.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.Notify(System.Object,System.String,System.EventArgs)">
            <summary>
            Notify listeners of event.
            </summary>
            <param name="eventSource">Object sending notification.</param>
            <param name="notificationEvent">Name of the event sending notification.</param>
            <param name="args">Notification arguments.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.InvalidateChildReference(BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo)">
            <summary>
            Removes child from list of events.
            </summary>
            <param name="item">Child to remove.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.InvalidateReference">
            <summary>
            Notification to remove this from parent collection.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo">
            <summary>
            Information about event on an object.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.#ctor(BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionContainerInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo"/> class.
            </summary>
            <param name="parent">Parent container.</param>
            <param name="eventName">Name of the event sending notification.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.EventName">
            <summary>
            Gets name of the event sending notification.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.Subscribers">
            <summary>
            Gets the list of subscribers for this event.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.Notify(System.Object,System.EventArgs)">
            <summary>
            Notify listeners of event.
            </summary>
            <param name="eventSource">Object sending notification.</param>
            <param name="args">Notification arguments.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.InvalidateChildReference(BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo)">
            <summary>
            Removes child from list of subscribers.
            </summary>
            <param name="item">Child to remove.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.InvalidateReference">
            <summary>
            Notification to remove this from parent collection.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo">
            <summary>
            Information about a subscriber for a particular event on a particular type of object.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.#ctor(BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo,System.Object,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo"/> class.
            </summary>
            <param name="parent">Parent container.</param>
            <param name="subscriber">Object receiving notifications.</param>
            <param name="subscriberType">Type of object receiving notifications.</param>
            <param name="eventHandlerMethodName">Name of method that will be invoked via reflection to handle notification.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.#ctor(BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriptionEventInfo,System.Object,System.Type,System.EventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo"/> class.
            </summary>
            <param name="parent">Parent container.</param>
            <param name="subscriber">Object receiving notifications.</param>
            <param name="subscriberType">Type of object receiving notifications.</param>
            <param name="eventHandler">Method that will be invoked to handle notification.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.SubscriberType">
            <summary>
            Gets type of object receiving notifications.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.EventHandlerMethodName">
            <summary>
            Gets name of method that will be invoked via reflection to handle notification.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.Handler">
            <summary>
            Gets method that will be invoked to handle notification.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.Notify(System.Object,System.EventArgs)">
            <summary>
            Notify listeners of event.
            </summary>
            <param name="eventSource">Object sending notification.</param>
            <param name="args">Notification arguments.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.InvalidateReference">
            <summary>
            Notification to remove this from parent collection.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Services.MessageBus.MessageBus.SubscriberInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel">
            <summary>
            View model for skin config dropdown setting.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.#ctor(BurnsBac.WindowsAppToolkit.HotConfig.Setting)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel"/> class.
            </summary>
            <param name="item">Source item.</param>
        </member>
        <member name="E:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.PropertyChanged">
            <summary>
            Property changed event.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.Items">
            <summary>
            Gets or sets list of dropdown data items.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.SelectedItem">
            <summary>
            Gets or sets currently selected data item.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.ShowScanningInfo">
            <summary>
            Gets a value indicating whether the UI should notify the user the application is waiting for results.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.WaitingForFirstPollResult">
            <summary>
            Gets or sets a value indicating whether any poll results have been received yet.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.Dispose">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingDropdownViewModel.OnPropertyChanged(System.String)">
            <summary>
            Property changed notifier.
            </summary>
            <param name="property">Name of property that changed.</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingTextboxViewModel">
            <summary>
            View model for skin config textbox setting.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingTextboxViewModel.#ctor(BurnsBac.WindowsAppToolkit.HotConfig.Setting)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingTextboxViewModel"/> class.
            </summary>
            <param name="item">Source item.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigSettingTextboxViewModel.Dispose">
            <inheritdoc />
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel">
            <summary>
            View model for skin config window.
            </summary>
        </member>
        <member name="F:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.SettingsChangedNotification">
            <summary>
            Notification event for when the settings have changed on disk.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel"/> class.
            </summary>
            <param name="settingsFilename">Path to file containing settings for this.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.CancelCommand">
            <summary>
            Gets or sets cancel button command.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.DisplayName">
            <summary>
            Gets or sets skin currently being configured.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.OkCommand">
            <summary>
            Gets or sets ok button command.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.SettingItems">
            <summary>
            Gets or sets list of settings items.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.Dispose">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.SaveChanges">
            <summary>
            Writes config settings to settings json file.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.ToString">
            <inheritdoc />
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ConfigViewModel.SettingsItemConverter(BurnsBac.WindowsAppToolkit.HotConfig.Setting)">
            <summary>
            Converts a json setting item to better typed object.
            </summary>
            <param name="item">Item to convert.</param>
            <returns>Config item.</returns>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase">
            <summary>
            Base class for creating dialog windows.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase"/> class.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase.WindowTitle">
            <summary>
            Gets or sets the window title.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase.BodyMessage">
            <summary>
            Gets or sets the message to show in the dialog.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase.UserDialogResult">
            <summary>
            Gets or sets result data to return when dialog is closed.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel">
            <summary>
            Dialog with "ok" and "cancel" buttons.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel"/> class.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel.CancelCommand">
            <summary>
            Gets or sets cancel button command.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel.OkCommand">
            <summary>
            Gets or sets ok button command.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel.CloseWithCancel(BurnsBac.WindowsAppToolkit.Mvvm.ICloseable)">
            <summary>
            Cancel button command.
            </summary>
            <param name="c">Window to close (this).</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelDialogWindowViewModel.CloseWithOk(BurnsBac.WindowsAppToolkit.Mvvm.ICloseable)">
            <summary>
            Ok button command.
            </summary>
            <param name="c">Window to close (this).</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelStringDialogWindowViewModel">
            <summary>
            Dialog with "ok" and "cancel" buttons. The user can also
            enter text in a textbox.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelStringDialogWindowViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelStringDialogWindowViewModel"/> class.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.OkCancelStringDialogWindowViewModel.UserInput">
            <summary>
            Gets or sets text that user entered.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel">
            <summary>
            Dialog with "yes" and "no" buttons.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel"/> class.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel.NoCommand">
            <summary>
            Gets or sets no button command.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel.YesCommand">
            <summary>
            Gets or sets yes button command.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel.CloseWithNo(BurnsBac.WindowsAppToolkit.Mvvm.ICloseable)">
            <summary>
            No button command.
            </summary>
            <param name="c">Window to close (this).</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.YesNoDialogWindowViewModel.CloseWithYes(BurnsBac.WindowsAppToolkit.Mvvm.ICloseable)">
            <summary>
            Yes button command.
            </summary>
            <param name="c">Window to close (this).</param>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel">
            <summary>
            ViewModel for error information.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel"/> class.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel"/> class.
            </summary>
            <param name="ex">Exception to display information about.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel"/> class.
            </summary>
            <param name="header">Header message text.</param>
            <param name="ex">Exception to display information about.</param>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.CloseCommand">
            <summary>
            Gets or sets ok button command.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.ExitOnClose">
            <summary>
            Gets or sets a value indicating whether the exception information is from an unhandled exception.
            If set to true, when the error window is closed the application will exit.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.HeaderMessage">
            <summary>
            Gets or sets the header message.
            </summary>
        </member>
        <member name="P:BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel.TextContent">
            <summary>
            Gets or sets the body content.
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Windows.ConfigWindow">
            <summary>
            Interaction logic for SkinConfigWindow.xaml .
            </summary>
            <summary>
            ConfigWindow
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.ConfigWindow.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Windows.ConfigWindow"/> class.
            </summary>
            <param name="settingsFilename">Path to file containing settings for this.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.ConfigWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Windows.DialogWindow">
            <summary>
            Interaction logic for DialogWindow.xaml .
            </summary>
            <summary>
            DialogWindow
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.DialogWindow.#ctor(BurnsBac.WindowsAppToolkit.ViewModels.Dialogs.DialogWindowViewModelBase)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Windows.DialogWindow"/> class.
            </summary>
            <param name="dataContext">ViewModel for window.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.DialogWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Windows.ErrorWindow">
            <summary>
            Interaction logic for ErrorWindow.xaml .
            </summary>
            <summary>
            ErrorWindow
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.ErrorWindow.#ctor(BurnsBac.WindowsAppToolkit.ViewModels.ErrorWindowViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:BurnsBac.WindowsAppToolkit.Windows.ErrorWindow"/> class.
            </summary>
            <param name="vm">ViewModel for error window.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Windows.ErrorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:BurnsBac.WindowsAppToolkit.Workspace">
            <summary>
            Application context.
            </summary>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Workspace.CreateSingletonWindow``1(System.Object[])">
            <summary>
            Shows a window of the given type. If a window with the same type already exists,
            it will be shown. If no window with the given type exists a new one will
            be created and shown.
            </summary>
            <typeparam name="T">Type of window to create.</typeparam>
            <param name="args">Window constructor arguments.</param>
        </member>
        <member name="M:BurnsBac.WindowsAppToolkit.Workspace.RecreateSingletonWindow``1(System.Object[])">
            <summary>
            Shows a window of the given type. If a window with the same type already exists,
            it will be closed and recreated. If no window with the given type exists a new one will
            be created and shown.
            </summary>
            <typeparam name="T">Type of window to create.</typeparam>
            <param name="args">Window constructor arguments.</param>
        </member>
    </members>
</doc>
